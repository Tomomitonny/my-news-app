{"mappings":";;;;;;;;;;;;;;;;;AEOA,MAAM,yCAAoD,CAAC,oBAAE,gBAAgB,oBAAE,gBAAgB,EAAE;IAC/F,MAAM,aAAa;QAAC;QAAO;QAAO;KAAO;IAEzC,qBACE,gCAAC;kBACE,WAAW,GAAG,CAAC,CAAA,yBACd,gCAAC;gBAEC,SAAS,IAAM,iBAAiB;gBAChC,WAAW,qBAAqB,WAAW,aAAa;0BAEvD;eAJI;;AASf;IAEA,2CAAe;;;;;AClBf,MAAM,iCAAoC,CAAC,YAAE,QAAQ,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qBAAO,EAAc,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qBAAO,EAAW;IAEhD,CAAA,GAAA,sBAAQ,EAAE;QACR,MAAM,YAAY;YAChB,WAAW;YACX,MAAM,cAAyC;gBAC7C,KAAK;gBACL,KAAK;gBACL,MAAM;YACR;YACA,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,sCAAsC,EAAE,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC;gBAClG,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM;gBAElB,MAAM,UAAoB,MAAM,SAAS,IAAI;gBAC7C,MAAM,eAAe,QAAQ,KAAK,CAAC,GAAG,KAAK,YAAY;gBACvD,MAAM,eAAe,aAAa,GAAG,CAAC,CAAC,KACrC,MAAM,CAAC,2CAA2C,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,CAAA;wBAClE,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM;wBAElB,OAAO,SAAS,IAAI;oBACtB;gBAEF,MAAM,cAAc,MAAM,QAAQ,GAAG,CAAC;gBACtC,aAAa;YACf,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;YACxC,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAS;IAEb,IAAI,SACF,qBAAO,gCAAC;kBAAI;;IAGd,qBACE;kBACE,cAAA,gCAAC;sBACE,UAAU,GAAG,CAAC,CAAA,qBACb,iCAAC;;sCACC,gCAAC;sCAAG,KAAK,EAAE;;sCACX,gCAAC;4BAAE,MAAM,KAAK,GAAG;4BAAE,QAAO;4BAAS,KAAI;sCACpC,KAAK,KAAK;;;mBAHN,KAAK,EAAE;;;AAU1B;IAEA,2CAAe;;;AF9Df,MAAM,4BAAgB;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qBAAO,EAAU;IAEjD,qBACE,iCAAC;;0BACC,iCAAC;;kCACC,gCAAC;kCAAG;;kCACN,gCAAC,CAAA,GAAA,wCAAe;wBACd,kBAAkB;wBAAU,kBAAkB;;;;0BAEhD,gCAAC;gBAAI,WAAU;0BACb,cAAA,gCAAC,CAAA,GAAA,wCAAO;oBAAE,UAAU;;;;;AAI5B;IAEA,2CAAe;;;ADhBf,MAAM,6BAAO,CAAA,GAAA,+CAAO,EAAE,UAAU,CAAC,SAAS,cAAc,CAAC;AACzD,2BAAK,MAAM,eACT,gCAAC,CAAA,GAAA,sCAAI,EAAE,UAAU;cACf,cAAA,gCAAC,CAAA,GAAA,wCAAE","sources":["src/index.tsx","src/App.tsx","src/components/CategorySelector.tsx","src/components/NewsList.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","import React, { useState } from 'react';\nimport CategorySelector from './components/CategorySelector';\nimport NewsList from './components/NewsList';\n\nconst App: React.FC = () => {\n  const [category, setCategory] = useState<string>('TOP');\n\n  return (\n    <div>\n      <header>\n        <h1>My News App</h1>\n      <CategorySelector \n        selectedCategory={category} onSelectCategory={setCategory} />\n      </header>\n      <div className='list'>\n        <NewsList category={category} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\ninterface CategorySelectorProps {\n  selectedCategory: string;\n  onSelectCategory: (category: string) => void;\n}\n\nconst CategorySelector: React.FC<CategorySelectorProps> = ({ selectedCategory, onSelectCategory }) => {\n  const categories = ['TOP', 'NEW', 'BEST'];\n\n  return (\n    <div>\n      {categories.map(category => (\n        <button\n          key={category}\n          onClick={() => onSelectCategory(category)}\n          className={selectedCategory === category ? 'selected' : ''}\n        >\n          {category}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default CategorySelector;\n","import React, { useEffect, useState } from 'react';\nimport { NewsItem } from '../types/news';\n\ninterface NewsListProps {\n  category: string;\n}\n\nconst NewsList: React.FC<NewsListProps> = ({ category }) => {\n  const [newsItems, setNewsItems] = useState<NewsItem[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      setLoading(true);\n      const categoryMap: { [key: string]: string } = {\n        TOP: 'topstories',\n        NEW: 'newstories',\n        BEST: 'beststories',\n      };\n      try {\n        const response = await fetch(`https://hacker-news.firebaseio.com/v0/${categoryMap[category]}.json`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const newsIds: number[] = await response.json();\n        const newsIdsSlice = newsIds.slice(0, 10); // 最初の10件を取得\n        const newsPromises = newsIdsSlice.map((id: number) => \n          fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`).then(response => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json();\n          })\n        );\n        const newsResults = await Promise.all(newsPromises);\n        setNewsItems(newsResults);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, [category]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <ul>\n        {newsItems.map(news => (\n          <li key={news.id}>\n            <p>{news.by}</p>\n            <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {news.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default NewsList;\n"],"names":[],"version":3,"file":"index.js.map"}